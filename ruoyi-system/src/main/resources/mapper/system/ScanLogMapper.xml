<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ScanLogMapper">
    <resultMap id="BaseResultMap" type="ScanLog">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Sep 18 22:51:36 CST 2024.
        -->
        <id column="id" jdbcType="BIGINT" property="logId" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="zhuangNum" jdbcType="VARCHAR" property="zhuangNum" />
        <result column="time" jdbcType="VARCHAR" property="time" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="longitude" jdbcType="VARCHAR" property="longitude" />
        <result column="latitude" jdbcType="VARCHAR" property="latitude" />
        <result column="weather" jdbcType="VARCHAR" property="weather" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="dealer" jdbcType="VARCHAR" property="dealer" />

    </resultMap>
    <sql id="selectScanLogVo">
        select s.id, s.content,s.zhuangNum, s.time, s.type,s.address,s.longitude,s.latitude,s.weather,s.remark,s.dealer
        from scanlog s
    </sql>
    <insert id="insert" parameterType="ScanLog">
        insert into scanlog(id, content,zhuangNum, time, type,address,longitude,latitude,weather,remark,dealer)
        values (null,
                #{content,jdbcType=VARCHAR},
                #{zhuangNum,jdbcType=VARCHAR},
                #{time,jdbcType=VARCHAR},
                #{type,jdbcType=VARCHAR},
                #{address,jdbcType=VARCHAR},
                #{longitude,jdbcType=VARCHAR},
                #{latitude,jdbcType=VARCHAR},
                #{weather,jdbcType=VARCHAR},
                #{remark,jdbcType=VARCHAR},
                #{dealer,jdbcType=VARCHAR}
               )
    </insert>
    <update id="update" parameterType="ScanLog">
        update scanlog
        <set>
            <if test="content != null and content != ''">content = #{content},</if>
            time = #{time},
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            <if test="longitude != null and longitude != ''">longitude = #{longitude},</if>
            <if test="latitude != null and latitude != ''">latitude = #{latitude},</if>
            <if test="weather != null and weather != ''">weather = #{weather},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="dealer != null and dealer != ''">dealer = #{dealer},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = sysdate()
        </set>
        where id = #{logId}
    </update>
    <select id="list" parameterType="ScanLog" resultMap="BaseResultMap">
     <include refid="selectScanLogVo"></include>
        <where>
            <if test="dealer != null and dealer != ''">
                AND dealer like concat('%', #{dealer}, '%')
            </if>
            <if test="type != null and type != ''">
                AND type = #{type}
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND time &gt;= #{params.beginTime}
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND time &lt;= #{params.endTime}
            </if>
        </where>
        order by id desc

    </select>
    <select id="selectScanLogById" parameterType="long" resultType="com.ruoyi.system.domain.dto.ScanLog">
        select s.id as logId, s.content,s.zhuangNum, s.time, s.type,s.address,s.longitude,s.latitude,s.weather,s.remark,s.dealer
        from scanlog s where s.id= #{id}
    </select>
    <select id="getCountOnTheMonth" resultType="java.lang.Integer">
        SELECT COUNT(*) AS total_count
        FROM scanlog
        WHERE DATE_FORMAT(time, '%Y-%m') = DATE_FORMAT(CURRENT_TIMESTAMP, '%Y-%m');
    </select>
    <select id="getCountOnTheMonthByType" resultType="java.lang.Integer">
        SELECT COUNT(*) AS total_count
        FROM scanlog
        WHERE DATE_FORMAT(time, '%Y-%m') = DATE_FORMAT(CURRENT_TIMESTAMP, '%Y-%m') and type=#{type};
    </select>
    <select id="getNumberByHours" resultType="java.lang.Integer">
        -- 创建一个临时表，包含24小时的时间区间
        WITH hours AS (
            SELECT DATE_FORMAT(DATE_SUB(CURRENT_TIMESTAMP, INTERVAL h HOUR), '%Y-%m-%d %H:00:00') AS hour_interval
            FROM (
                     SELECT 0 AS h UNION ALL SELECT 1 AS h UNION ALL SELECT 2 AS h UNION ALL SELECT 3 AS h UNION ALL SELECT 4 AS h UNION ALL SELECT 5 AS h UNION ALL SELECT 6 AS h UNION ALL SELECT 7 AS h UNION ALL SELECT 8 AS h UNION ALL SELECT 9 AS h UNION ALL SELECT 10 AS h UNION ALL SELECT 11 AS h UNION ALL SELECT 12 AS h UNION ALL SELECT 13 AS h UNION ALL SELECT 14 AS h UNION ALL SELECT 15 AS h UNION ALL SELECT 16 AS h UNION ALL SELECT 17 AS h UNION ALL SELECT 18 AS h UNION ALL SELECT 19 AS h UNION ALL Select 20 AS h UNION ALL Select 21 AS h UNION ALL Select 22 AS h UNION ALL Select 23 AS h
                 ) AS hours_table
        )

-- 从原始表和临时表进行联合查询，统计每小时的计数并按照0-23点顺序排列输出 hours.hour_interval,
        SELECT  COUNT(scanlog.time) AS count_per_hour
        FROM hours
                 LEFT JOIN scanlog ON hours.hour_interval = DATE_FORMAT(scanlog.time, '%Y-%m-%d %H:00:00')
        GROUP BY hours.hour_interval
        ORDER BY HOUR(hours.hour_interval);
    </select>
    <select id="getCountOnTheWeek" resultType="java.lang.Integer">
        SELECT COUNT(*) AS record_count
        FROM scanlog
        WHERE time >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 WEEK)
    </select>
    <select id="getCountOnTheByType" resultType="java.lang.Integer">
        SELECT COUNT(*) AS record_count
        FROM scanlog
        WHERE time >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 WEEK) and type=#{type};
    </select>
    <select id="getNumberOnTheWeek" resultType="java.lang.Integer">
        -- 创建一个临时表，包含最近一周的日期范围
        WITH days AS (
            SELECT DATE_FORMAT(DATE_SUB(CURRENT_DATE, INTERVAL d DAY), '%Y-%m-%d') AS day_interval
            FROM (
                     SELECT 0 AS d UNION ALL SELECT 1 AS d UNION ALL SELECT 2 AS d UNION ALL SELECT 3 AS d UNION ALL SELECT 4 AS d UNION ALL SELECT 5 AS d UNION ALL SELECT 6 AS d
                 ) AS days_table
        )

-- 从原始表和临时表进行联合查询，统计每天的计数并区分处理状态 days.day_interval,
        SELECT
               SUM(CASE WHEN scanlog.type = '1' THEN 1 ELSE 0 END) AS processed_count
--                SUM(CASE WHEN scanlog.type = '0' THEN 1 ELSE 0 END) AS unprocessed_count
        FROM days
                 LEFT JOIN scanlog ON days.day_interval = DATE_FORMAT(scanlog.time, '%Y-%m-%d')
            AND scanlog.time >= DATE_SUB(CURRENT_DATE, INTERVAL 6 DAY)
        GROUP BY days.day_interval
        ORDER BY days.day_interval;
    </select>


</mapper>